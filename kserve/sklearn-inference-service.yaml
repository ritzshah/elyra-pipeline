apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  name: elyra-demo-model
  namespace: kserve-inference
  annotations:
    serving.kserve.io/deploymentMode: "Serverless"
    autoscaling.knative.dev/minScale: "0"
    autoscaling.knative.dev/maxScale: "10"
    autoscaling.knative.dev/target: "1"
spec:
  predictor:
    serviceAccountName: kserve-sa
    sklearn:
      storageUri: "s3://mlpipeline/models/best_model"
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 1Gi
      env:
        - name: STORAGE_URI
          value: "s3://mlpipeline/models/best_model"
    tolerations:
      - key: "model-serving"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-config
  namespace: kserve-inference
data:
  model_settings.json: |
    {
      "model_name": "elyra-demo-model",
      "model_version": "v1",
      "framework": "sklearn",
      "input_schema": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "output_schema": {
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "metadata": {
        "created_by": "elyra_pipeline",
        "model_type": "classification",
        "training_timestamp": "auto_generated",
        "performance_threshold": 0.8
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kserve-inference-policy
  namespace: kserve-inference
spec:
  podSelector:
    matchLabels:
      app: elyra-demo-model-predictor
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: knative-serving
    - podSelector:
        matchLabels:
          app: monitoring
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP